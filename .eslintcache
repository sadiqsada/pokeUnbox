[{"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\index.js":"1","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\App.js":"2","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\Login.js":"3","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\Register.js":"4","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\GenerateCard.js":"5","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\context\\UserContext.js":"6","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\Header.js":"7","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\misc\\ErrorNotice.js":"8","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\DeckCardView.js":"9"},{"size":219,"mtime":1607489781290,"results":"10","hashOfConfig":"11"},{"size":1567,"mtime":1608592831929,"results":"12","hashOfConfig":"11"},{"size":3271,"mtime":1608504586388,"results":"13","hashOfConfig":"11"},{"size":3860,"mtime":1608504220978,"results":"14","hashOfConfig":"11"},{"size":4485,"mtime":1608605777665,"results":"15","hashOfConfig":"11"},{"size":79,"mtime":1608347343631,"results":"16","hashOfConfig":"11"},{"size":795,"mtime":1608415878837,"results":"17","hashOfConfig":"11"},{"size":329,"mtime":1608605870328,"results":"18","hashOfConfig":"11"},{"size":776,"mtime":1608605425685,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"yi3ney",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\index.js",[],["41","42"],"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\App.js",[],"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\Login.js",[],"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\Register.js",[],"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\GenerateCard.js",["43"],"import React, { useState, useEffect } from 'react';\r\nimport { Button, Row, Col, Card } from 'antd';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Header from './Header';\r\nimport Axios from 'axios';\r\nimport DeckCardView from './DeckCardView';\r\n\r\nfunction GenerateCard() {\r\n  const [currentCard, setCurrentCard] = useState({\r\n    imageUrlHiRes:\r\n      'https://crystal-cdn3.crystalcommerce.com/photos/1140613/003.png',\r\n  });\r\n  const [currentDeck, setCurrentDeck] = useState([]);\r\n  const [render, setRender] = useState(true);\r\n  const [disableAdd, setDisableAdd] = useState(true);\r\n\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const checkTokenValid = async () => {\r\n      let token = localStorage.getItem('auth-token');\r\n      if (token === null || token === '') {\r\n        localStorage.setItem('auth-token', '');\r\n        token = '';\r\n        setRender(false);\r\n        history.push('/');\r\n      }\r\n      const tokenRes = await Axios.post(\r\n        'http://localhost:5000/users/tokenIsValid',\r\n        null,\r\n        {\r\n          headers: { 'x-auth-token': token },\r\n        }\r\n      );\r\n      if (!tokenRes.data) {\r\n        setRender(false);\r\n        history.push('/');\r\n      }\r\n    };\r\n    checkTokenValid();\r\n\r\n    const getAllCards = async () => {\r\n      let token = localStorage.getItem('auth-token');\r\n      const deck = await Axios.get('http://localhost:5000/cards/all', {\r\n        headers: { 'x-auth-token': token },\r\n      });\r\n      setCurrentDeck(deck.data);\r\n    };\r\n    getAllCards();\r\n  }, []);\r\n\r\n  const handleGenerate = () => {\r\n    let randNum = Math.floor(Math.random() * 130);\r\n    fetch('https://api.pokemontcg.io/v1/cards?page=' + randNum).then(\r\n      (response) => {\r\n        response.json().then((data) => {\r\n          let randNum = Math.floor(Math.random() * data.cards.length);\r\n          setCurrentCard(data.cards[randNum]);\r\n        });\r\n      }\r\n    );\r\n\r\n    setDisableAdd(false);\r\n  };\r\n\r\n  const handleAdd = async () => {\r\n    const newCard = {\r\n      name: currentCard.name,\r\n      pokedexNum: currentCard.nationalPokedexNumber,\r\n      types: currentCard.types,\r\n      imageUrl: currentCard.imageUrl,\r\n    };\r\n    let token = localStorage.getItem('auth-token');\r\n\r\n    await Axios.post('http://localhost:5000/cards', newCard, {\r\n      headers: { 'x-auth-token': token },\r\n    });\r\n\r\n    setCurrentDeck([currentCard, ...currentDeck]);\r\n    setDisableAdd(true);\r\n  };\r\n\r\n  const handleGoToTop = () => {\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  let generateCard = !render ? null : (\r\n    <>\r\n      <Header />\r\n      <Row\r\n        style={{\r\n          display: 'flex',\r\n          flexDirection: 'row',\r\n        }}\r\n      >\r\n        <Col span={12}>\r\n          <Row\r\n            style={{\r\n              fontWeight: '500',\r\n              fontFamily: ['Montserrat', 'sans-serif'],\r\n              fontSize: '2em',\r\n            }}\r\n            justify='center'\r\n          >\r\n            Deck\r\n          </Row>\r\n          <Row style={{ marginLeft: '1vw' }}>\r\n            {currentDeck.map((card) => (\r\n              <DeckCardView key={card._id} data={card} />\r\n            ))}\r\n          </Row>\r\n          <Row style={{ marginTop: '1vh' }} justify='center'>\r\n            <Button onClick={handleGoToTop} type='primary'>\r\n              Go To Top\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n        <Col\r\n          style={{\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n          }}\r\n          span={12}\r\n        >\r\n          <Row justify='center'>\r\n            <Card\r\n              hoverable\r\n              style={{ width: 480, height: 600, marginTop: '2vh' }}\r\n              cover={\r\n                <img\r\n                  style={{ height: 600 }}\r\n                  alt='card'\r\n                  src={currentCard.imageUrlHiRes}\r\n                />\r\n              }\r\n            ></Card>\r\n          </Row>\r\n          <Row\r\n            type='flex'\r\n            justify='center'\r\n            style={{ marginTop: '3vh' }}\r\n            gutter={6}\r\n          >\r\n            <Col>\r\n              <Button onClick={handleGenerate} type='primary'>\r\n                Generate\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button onClick={handleAdd} type='primary' disabled={disableAdd}>\r\n                Add\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n\r\n  return generateCard;\r\n}\r\n\r\nexport default GenerateCard;\r\n","C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\context\\UserContext.js",[],"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\Header.js",[],"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\misc\\ErrorNotice.js",[],"C:\\Users\\samin\\Desktop\\pokemonunbox\\src\\components\\DeckCardView.js",["44"],"import React from 'react';\r\nimport { Card } from 'antd';\r\nimport Axios from 'axios';\r\n\r\nfunction DeckCardView(props) {\r\n  const handleDelete = async () => {\r\n    const id = props.data._id;\r\n    const token = localStorage.getItem('auth-token');\r\n    const deleteString = 'http://localhost:5000/cards/' + id;\r\n    await Axios.delete(deleteString, {\r\n      headers: { 'x-auth-token': token },\r\n    })\r\n      .then(() => {\r\n        console.log('Deleted.');\r\n      })\r\n      .catch((err) => console.log(err.message));\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      hoverable\r\n      onClick={handleDelete}\r\n      style={{ width: '16vw', height: '45vh' }}\r\n      cover={<img style={{ height: '45vh' }} src={props.data.imageUrl}></img>}\r\n    ></Card>\r\n  );\r\n}\r\n\r\nexport default DeckCardView;\r\n",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":50,"column":6,"nodeType":"51","endLine":50,"endColumn":8,"suggestions":"52"},{"ruleId":"53","severity":1,"message":"54","line":24,"column":14,"nodeType":"55","endLine":24,"endColumn":72},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["58"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"59","fix":"60"},"Update the dependencies array to be: [history]",{"range":"61","text":"62"},[1533,1535],"[history]"]